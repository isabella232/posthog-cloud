name: CI

on:
  - pull_request
env:
  SECRET_KEY: "6b01eee4f945ca25045b5aab440b953461faf08693a9abbf1166dc7c6b9772da" # unsafe - for testing only
  DATABASE_URL: "postgres://posthog:posthog@localhost:5432/posthog"
  REDIS_URL: "redis://localhost"
  CLICKHOUSE_HOST: "localhost"
  CLICKHOUSE_DATABASE: "posthog_test"
  CLICKHOUSE_SECURE: "False"
  CLICKHOUSE_VERIFY: "False"
  STRIPE_API_KEY: "sk_test_987654321"
  STRIPE_PUBLISHABLE_KEY: "pk_test_987654321"
  SAML_DISABLED: 1
  TEST: 1

jobs:
  django:
    name: Main repository tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Fetch posthog main repo
        run: bin/pull_main

      - name: Start stack with Docker Compose
        run: docker-compose -f deploy/docker-compose.yml up -d db clickhouse zookeeper kafka

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install SAML (python3-saml) dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl

      - uses: syphar/restore-virtualenv@v1
        id: cache-backend-tests
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-backend-tests.outputs.cache-hit != 'true'
      - name: Install python dependencies
        if: steps.cache-backend-tests.outputs.cache-hit != 'true'
        run: |
          python -m pip install -r deploy/requirements-dev.txt
          python -m pip install -r deploy/requirements.txt

      - name: Run migrations
        run: python deploy/manage.py migrate

      - name: Add kafka host to /etc/hosts for kafka connectivity
        run: sudo echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts

      - name: Run posthog tests
        run: |
          cd deploy
          mkdir -p frontend/dist
          touch frontend/dist/index.html
          touch frontend/dist/layout.html
          touch frontend/dist/shared_dashboard.html
          pytest posthog/ -m "not (skip_on_multitenancy or ee)"

      - name: Run EE tests
        env:
          PRIMARY_DB: "clickhouse"
        run: |
          cd deploy
          pytest ee/ -m "not skip_on_multitenancy"
          pytest posthog -m "ee and not skip_on_multitenancy"

  cloud:
    name: Local repository tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Fetch posthog main repo
        run: |
          bin/pull_main
          cp deploy/ee/conftest.py deploy/messaging/conftest.py
          cp deploy/ee/conftest.py deploy/multi_tenancy/conftest.py

      - name: Start stack with Docker Compose
        run: docker-compose -f deploy/docker-compose.yml up -d db clickhouse

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install SAML (python3-saml) dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl

      - uses: syphar/restore-virtualenv@v1
        id: cache-backend-tests
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-backend-tests.outputs.cache-hit != 'true'
      - name: Install python dependencies
        if: steps.cache-backend-tests.outputs.cache-hit != 'true'
        run: |
          python -m pip install -r deploy/requirements-dev.txt
          python -m pip install -r deploy/requirements.txt

      - name: Check migrations & migrate
        run: |
          cd deploy
          python manage.py makemigrations --check --dry-run
          python manage.py migrate

      - name: Static files
        run: |
          cd deploy
          mkdir -p frontend/dist
          python manage.py collectstatic --noinput
          touch frontend/dist/index.html
          touch frontend/dist/layout.html
          touch frontend/dist/shared_dashboard.html

      - name: Run cloud tests (posthog-production)
        env:
          PRIMARY_DB: "clickhouse"
        run: |
          cd deploy
          pytest multi_tenancy messaging -m "not skip_on_multitenancy"
